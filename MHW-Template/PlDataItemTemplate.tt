<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(TargetDir)\MHW-Template.dll" #>
<#@ parameter type="System.String" name="_namespace" #>
<#@ parameter type="System.String" name="className" #>
<#@ parameter type="MHW_Template.MhwStructData" name="structData" #>
<#@ import namespace="System.Text.RegularExpressions" #>
using System.Collections.ObjectModel;
using MHW_Editor.Models;

namespace <#= _namespace #> {
    public partial class <#= className #> {
        public ObservableCollection<PlDataItemCustomView> GetCustomView() {
            return new ObservableCollection<PlDataItemCustomView> {
<#
    var sortIndex = 50;

    foreach (var entry in structData.entries) {
        var accessLevel = entry.accessLevel;
        var name = Regex.Replace(entry.displayName, @"[^\w\d]+", "_");

        if (entry.forceUnique) {
            name += $"_{sortIndex}";
        }

        // Don't need now, but uncomment in the future if we need to override a generated property.
        if (accessLevel == "private") continue;

#>
                new PlDataItemCustomView(this, "<#= entry.displayName #>", "<#= name #>", Bytes, <#= entry.offset #>),
<#
        sortIndex += 50;
    } // End loop.
#>
            };
        }
    }<# // End class. #>

}