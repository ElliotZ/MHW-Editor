<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(TargetDir)\MHW-Template.dll" #>
<#@ parameter type="System.String" name="_namespace" #>
<#@ parameter type="System.String" name="className" #>
<#@ parameter type="System.Collections.Generic.Dictionary<string, Dictionary<string, List<string>>>" name="hashMap" #>
<#@ parameter type="System.Collections.Generic.Dictionary<string, string>" name="goodChunkMap" #>
<#@ parameter type="System.Collections.Generic.Dictionary<string, string>" name="filePathMap" #>
<#@ import namespace="System.Collections.Generic" #>
using System.Collections.Generic;

namespace <#= _namespace #> {
    public static class <#= className #> {
        public static readonly Dictionary<string, Dictionary<string, List<string>>> BAD_FILE_HASH_MAP = new Dictionary<string, Dictionary<string, List<string>>> {
<#
    foreach (var tldPair in hashMap) {
        WriteLine($"            {{\"{tldPair.Key}\", new Dictionary<string, List<string>> {{");

        foreach (var entry in tldPair.Value) {
            var hashString = string.Join("\", \"", entry.Value);
            WriteLine($"                {{\"{entry.Key}\", new List<string> {{\"{hashString}\"}}}},");
        }

        WriteLine("            }},");
    }

    WriteLine("        };\r\n");
    WriteLine("        public static readonly Dictionary<string, string> GOOD_CHUNK_MAP = new Dictionary<string, string> {");

    foreach (var entry in goodChunkMap) {
        WriteLine($"            {{\"{entry.Key}\", \"{entry.Value}\"}},");
    }

    WriteLine("        };\r\n");
    WriteLine("        public static readonly Dictionary<string, string> FILE_PATH_MAP = new Dictionary<string, string> {");

    foreach (var entry in filePathMap) {
        WriteLine($"            {{\"{entry.Key}\", \"{entry.Value.Replace(@"\", @"\\")}\"}},");
    }
#>
        };
    }
}