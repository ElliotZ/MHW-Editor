<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".cs" #>
<#@ assembly name="$(TargetDir)\MHW-Template.dll" #>
<#@ parameter type="System.String" name="_namespace" #>
<#@ parameter type="System.String" name="className" #>
<#@ parameter type="MHW_Template.MhwStructData" name="structData" #>
<#@ import namespace="Microsoft.CSharp" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>
using MHW_Template;

namespace <#= _namespace #> {
    public struct <#= className #> {
<#
    var compiler = new CSharpCodeProvider();
    var newList = new List<MhwStructData.Entry>(structData.entries);
    newList.Sort((entry1, entry2) => entry1.offset.CompareTo(entry2.offset));

    foreach (var entry in newList) {
        var name = Regex.Replace(entry.displayName, @"[^\w\d]+", "_");
        var typeString = compiler.GetTypeOutput(entry.type);
#>
        public <#= typeString #> <#= name #>; // Offset: <#= entry.offset #>
<#
    }
#>
    }
}